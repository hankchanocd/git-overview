#!/usr/bin/env bash
#!/usr/bin/env zsh

# Print a quick insight view of git repository at terminal
#
# Repo: https://github.com/hankchanocd/git-overview

#########################
### Helper functions ####
hr() {
	echo " "
}

#########################
#### Child functions ####
# Show calendar from `git-stats`
calendar() {
	if type git-stats >/dev/null 2>&1; then
		git-stats -g
	fi
}

# Show author summary from `git-extras`
repo-summary() {
	if [[ -x "$1" ]]; then
		count=17 # The default is to retrieve only the top ten contributors
	else
		count=$(($1 + 7))
	fi

	if type git-summary >/dev/null 2>&1; then
		git summary | head -n $count
	fi
}

# Show info from built-in `git-info`
info() {
	git info --no-config
}

# Show show-tree from `git-extras`
show-tree() {
	echo "## Branch tree"
	hr

	git log --color --all --graph --decorate --oneline --simplify-by-decoration

	hr
	hr
	hr
}

# Show effort from `git-extras`
effort() {
	if [[ -x "$1" ]]; then
		commit=5
	else
		commit="$1"
	fi

	echo "Effort"
	if type git-effort >/dev/null 2>&1; then
		git effort --above "$commit"
	fi
}

#########################
######### main ##########
summary() {
	count=$(git rev-list HEAD --count)

	if (($count <= 300)); then
		calendar

		repo-summary

		info

		show-tree

		effort 1

	elif (($count <= 1200)); then
		calendar

		repo-summary

		info

		show-tree

		effort 5

	elif (($count <= 10000)); then
		calendar

		repo-summary 20

		info

		show-tree

		effort 20

	else
		calendar

		repo-summary 20

		info

		show-tree

        echo 'This repo has more than 10000 commits. Rendering `Effort` has bad performance.'
	fi
}

main() {
	summary |
		GREP_COLOR='00;38;5;226' grep --color=always '.*\#\#.*\|$' | # highlight category titles
		less -R
}
main
